//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace QuickFrame.ClientConnector.QfDataService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QfDataServiceSoap", Namespace="http://qf.nolyoh.com/")]
    public partial class QfDataService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientInfoByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ColumnExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistsByParamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TabExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteSqlByNoTimeOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlByTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlTranOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlByContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlGetByContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlInsertImgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleByTimeOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryByTimeOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlByParamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlTranByHashtableOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlTranByCmdListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlTranWithIndentityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlTranWithIndentityByHashtableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleByParamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryByParamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunProcedureByDicParamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunProcedureByTimeOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunProcedureDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunProcedureRetRowsAffectedOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunProcedureByDicParams_OperationCompleted;
        
        private System.Threading.SendOrPostCallback RunProcedure_OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUploadInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback AbortUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileLengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadFileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateThumbnailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateThumbnailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWechatUserInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public QfDataService() {
            this.Url = global::QuickFrame.ClientConnector.Properties.Settings.Default.QuickFrame_ClientConnector_QfDataService_QfDataService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTokenCompletedEventHandler GetTokenCompleted;
        
        /// <remarks/>
        public event QueryTokenCompletedEventHandler QueryTokenCompleted;
        
        /// <remarks/>
        public event UpdateClientInfoCompletedEventHandler UpdateClientInfoCompleted;
        
        /// <remarks/>
        public event GetClientInfoByUserIDCompletedEventHandler GetClientInfoByUserIDCompleted;
        
        /// <remarks/>
        public event CloseTokenCompletedEventHandler CloseTokenCompleted;
        
        /// <remarks/>
        public event GetServerDateTimeCompletedEventHandler GetServerDateTimeCompleted;
        
        /// <remarks/>
        public event ColumnExistsCompletedEventHandler ColumnExistsCompleted;
        
        /// <remarks/>
        public event GetMaxIDCompletedEventHandler GetMaxIDCompleted;
        
        /// <remarks/>
        public event ExistsCompletedEventHandler ExistsCompleted;
        
        /// <remarks/>
        public event ExistsByParamsCompletedEventHandler ExistsByParamsCompleted;
        
        /// <remarks/>
        public event TabExistsCompletedEventHandler TabExistsCompleted;
        
        /// <remarks/>
        public event ExecuteSqlCompletedEventHandler ExecuteSqlCompleted;
        
        /// <remarks/>
        public event ExcuteSqlByNoTimeOutCompletedEventHandler ExcuteSqlByNoTimeOutCompleted;
        
        /// <remarks/>
        public event ExecuteSqlByTimeCompletedEventHandler ExecuteSqlByTimeCompleted;
        
        /// <remarks/>
        public event ExecuteSqlTranCompletedEventHandler ExecuteSqlTranCompleted;
        
        /// <remarks/>
        public event ExecuteSqlByContentCompletedEventHandler ExecuteSqlByContentCompleted;
        
        /// <remarks/>
        public event ExecuteSqlGetByContentCompletedEventHandler ExecuteSqlGetByContentCompleted;
        
        /// <remarks/>
        public event ExecuteSqlInsertImgCompletedEventHandler ExecuteSqlInsertImgCompleted;
        
        /// <remarks/>
        public event GetSingleCompletedEventHandler GetSingleCompleted;
        
        /// <remarks/>
        public event GetSingleByTimeOutCompletedEventHandler GetSingleByTimeOutCompleted;
        
        /// <remarks/>
        public event QueryCompletedEventHandler QueryCompleted;
        
        /// <remarks/>
        public event QueryByTimeOutCompletedEventHandler QueryByTimeOutCompleted;
        
        /// <remarks/>
        public event ExecuteSqlByParamsCompletedEventHandler ExecuteSqlByParamsCompleted;
        
        /// <remarks/>
        public event ExecuteSqlTranByHashtableCompletedEventHandler ExecuteSqlTranByHashtableCompleted;
        
        /// <remarks/>
        public event ExecuteSqlTranByCmdListCompletedEventHandler ExecuteSqlTranByCmdListCompleted;
        
        /// <remarks/>
        public event ExecuteSqlTranWithIndentityCompletedEventHandler ExecuteSqlTranWithIndentityCompleted;
        
        /// <remarks/>
        public event ExecuteSqlTranWithIndentityByHashtableCompletedEventHandler ExecuteSqlTranWithIndentityByHashtableCompleted;
        
        /// <remarks/>
        public event GetSingleByParamsCompletedEventHandler GetSingleByParamsCompleted;
        
        /// <remarks/>
        public event QueryByParamsCompletedEventHandler QueryByParamsCompleted;
        
        /// <remarks/>
        public event RunProcedureByDicParamsCompletedEventHandler RunProcedureByDicParamsCompleted;
        
        /// <remarks/>
        public event RunProcedureCompletedEventHandler RunProcedureCompleted;
        
        /// <remarks/>
        public event RunProcedureByTimeOutCompletedEventHandler RunProcedureByTimeOutCompleted;
        
        /// <remarks/>
        public event RunProcedureDataSetCompletedEventHandler RunProcedureDataSetCompleted;
        
        /// <remarks/>
        public event RunProcedureRetRowsAffectedCompletedEventHandler RunProcedureRetRowsAffectedCompleted;
        
        /// <remarks/>
        public event RunProcedureByDicParams_CompletedEventHandler RunProcedureByDicParams_Completed;
        
        /// <remarks/>
        public event RunProcedure_CompletedEventHandler RunProcedure_Completed;
        
        /// <remarks/>
        public event CreateDirectoryCompletedEventHandler CreateDirectoryCompleted;
        
        /// <remarks/>
        public event CreateUploadInstanceCompletedEventHandler CreateUploadInstanceCompleted;
        
        /// <remarks/>
        public event UploadFileDataCompletedEventHandler UploadFileDataCompleted;
        
        /// <remarks/>
        public event AbortUploadCompletedEventHandler AbortUploadCompleted;
        
        /// <remarks/>
        public event FileExistsCompletedEventHandler FileExistsCompleted;
        
        /// <remarks/>
        public event GetFileLengthCompletedEventHandler GetFileLengthCompleted;
        
        /// <remarks/>
        public event DownloadFileDataCompletedEventHandler DownloadFileDataCompleted;
        
        /// <remarks/>
        public event GenerateThumbnailCompletedEventHandler GenerateThumbnailCompleted;
        
        /// <remarks/>
        public event CreateThumbnailsCompletedEventHandler CreateThumbnailsCompleted;
        
        /// <remarks/>
        public event GetWechatUserInfoCompletedEventHandler GetWechatUserInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/GetToken", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetToken([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteSignature, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteTimestamp, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteNonce) {
            object[] results = this.Invoke("GetToken", new object[] {
                        byteSignature,
                        byteTimestamp,
                        byteNonce});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTokenAsync(byte[] byteSignature, byte[] byteTimestamp, byte[] byteNonce) {
            this.GetTokenAsync(byteSignature, byteTimestamp, byteNonce, null);
        }
        
        /// <remarks/>
        public void GetTokenAsync(byte[] byteSignature, byte[] byteTimestamp, byte[] byteNonce, object userState) {
            if ((this.GetTokenOperationCompleted == null)) {
                this.GetTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTokenOperationCompleted);
            }
            this.InvokeAsync("GetToken", new object[] {
                        byteSignature,
                        byteTimestamp,
                        byteNonce}, this.GetTokenOperationCompleted, userState);
        }
        
        private void OnGetTokenOperationCompleted(object arg) {
            if ((this.GetTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTokenCompleted(this, new GetTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/QueryToken", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool QueryToken([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteToken) {
            object[] results = this.Invoke("QueryToken", new object[] {
                        byteToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTokenAsync(byte[] byteToken) {
            this.QueryTokenAsync(byteToken, null);
        }
        
        /// <remarks/>
        public void QueryTokenAsync(byte[] byteToken, object userState) {
            if ((this.QueryTokenOperationCompleted == null)) {
                this.QueryTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTokenOperationCompleted);
            }
            this.InvokeAsync("QueryToken", new object[] {
                        byteToken}, this.QueryTokenOperationCompleted, userState);
        }
        
        private void OnQueryTokenOperationCompleted(object arg) {
            if ((this.QueryTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTokenCompleted(this, new QueryTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/UpdateClientInfo", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateClientInfo([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteClientInfo, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteToken) {
            this.Invoke("UpdateClientInfo", new object[] {
                        byteClientInfo,
                        byteToken});
        }
        
        /// <remarks/>
        public void UpdateClientInfoAsync(byte[] byteClientInfo, byte[] byteToken) {
            this.UpdateClientInfoAsync(byteClientInfo, byteToken, null);
        }
        
        /// <remarks/>
        public void UpdateClientInfoAsync(byte[] byteClientInfo, byte[] byteToken, object userState) {
            if ((this.UpdateClientInfoOperationCompleted == null)) {
                this.UpdateClientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateClientInfo", new object[] {
                        byteClientInfo,
                        byteToken}, this.UpdateClientInfoOperationCompleted, userState);
        }
        
        private void OnUpdateClientInfoOperationCompleted(object arg) {
            if ((this.UpdateClientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/GetClientInfoByUserID", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetClientInfoByUserID(string clientType, int userId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteToken) {
            object[] results = this.Invoke("GetClientInfoByUserID", new object[] {
                        clientType,
                        userId,
                        byteToken});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClientInfoByUserIDAsync(string clientType, int userId, byte[] byteToken) {
            this.GetClientInfoByUserIDAsync(clientType, userId, byteToken, null);
        }
        
        /// <remarks/>
        public void GetClientInfoByUserIDAsync(string clientType, int userId, byte[] byteToken, object userState) {
            if ((this.GetClientInfoByUserIDOperationCompleted == null)) {
                this.GetClientInfoByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientInfoByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetClientInfoByUserID", new object[] {
                        clientType,
                        userId,
                        byteToken}, this.GetClientInfoByUserIDOperationCompleted, userState);
        }
        
        private void OnGetClientInfoByUserIDOperationCompleted(object arg) {
            if ((this.GetClientInfoByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientInfoByUserIDCompleted(this, new GetClientInfoByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/CloseToken", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseToken([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteToken) {
            this.Invoke("CloseToken", new object[] {
                        byteToken});
        }
        
        /// <remarks/>
        public void CloseTokenAsync(byte[] byteToken) {
            this.CloseTokenAsync(byteToken, null);
        }
        
        /// <remarks/>
        public void CloseTokenAsync(byte[] byteToken, object userState) {
            if ((this.CloseTokenOperationCompleted == null)) {
                this.CloseTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseTokenOperationCompleted);
            }
            this.InvokeAsync("CloseToken", new object[] {
                        byteToken}, this.CloseTokenOperationCompleted, userState);
        }
        
        private void OnCloseTokenOperationCompleted(object arg) {
            if ((this.CloseTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseTokenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/GetServerDateTime", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetServerDateTime() {
            object[] results = this.Invoke("GetServerDateTime", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServerDateTimeAsync() {
            this.GetServerDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetServerDateTimeAsync(object userState) {
            if ((this.GetServerDateTimeOperationCompleted == null)) {
                this.GetServerDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetServerDateTime", new object[0], this.GetServerDateTimeOperationCompleted, userState);
        }
        
        private void OnGetServerDateTimeOperationCompleted(object arg) {
            if ((this.GetServerDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerDateTimeCompleted(this, new GetServerDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ColumnExists", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ColumnExists([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteTableName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteColumnName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("ColumnExists", new object[] {
                        byteTableName,
                        byteColumnName,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ColumnExistsAsync(byte[] byteTableName, byte[] byteColumnName, byte[] token) {
            this.ColumnExistsAsync(byteTableName, byteColumnName, token, null);
        }
        
        /// <remarks/>
        public void ColumnExistsAsync(byte[] byteTableName, byte[] byteColumnName, byte[] token, object userState) {
            if ((this.ColumnExistsOperationCompleted == null)) {
                this.ColumnExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnColumnExistsOperationCompleted);
            }
            this.InvokeAsync("ColumnExists", new object[] {
                        byteTableName,
                        byteColumnName,
                        token}, this.ColumnExistsOperationCompleted, userState);
        }
        
        private void OnColumnExistsOperationCompleted(object arg) {
            if ((this.ColumnExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ColumnExistsCompleted(this, new ColumnExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/GetMaxID", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMaxID([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteFieldName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteTableName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("GetMaxID", new object[] {
                        byteFieldName,
                        byteTableName,
                        token});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxIDAsync(byte[] byteFieldName, byte[] byteTableName, byte[] token) {
            this.GetMaxIDAsync(byteFieldName, byteTableName, token, null);
        }
        
        /// <remarks/>
        public void GetMaxIDAsync(byte[] byteFieldName, byte[] byteTableName, byte[] token, object userState) {
            if ((this.GetMaxIDOperationCompleted == null)) {
                this.GetMaxIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxIDOperationCompleted);
            }
            this.InvokeAsync("GetMaxID", new object[] {
                        byteFieldName,
                        byteTableName,
                        token}, this.GetMaxIDOperationCompleted, userState);
        }
        
        private void OnGetMaxIDOperationCompleted(object arg) {
            if ((this.GetMaxIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxIDCompleted(this, new GetMaxIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/Exists", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Exists([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("Exists", new object[] {
                        byteStrSql,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistsAsync(byte[] byteStrSql, byte[] token) {
            this.ExistsAsync(byteStrSql, token, null);
        }
        
        /// <remarks/>
        public void ExistsAsync(byte[] byteStrSql, byte[] token, object userState) {
            if ((this.ExistsOperationCompleted == null)) {
                this.ExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsOperationCompleted);
            }
            this.InvokeAsync("Exists", new object[] {
                        byteStrSql,
                        token}, this.ExistsOperationCompleted, userState);
        }
        
        private void OnExistsOperationCompleted(object arg) {
            if ((this.ExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsCompleted(this, new ExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ExistsByParams", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistsByParams([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteCmdParms, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("ExistsByParams", new object[] {
                        byteStrSql,
                        byteCmdParms,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistsByParamsAsync(byte[] byteStrSql, byte[] byteCmdParms, byte[] token) {
            this.ExistsByParamsAsync(byteStrSql, byteCmdParms, token, null);
        }
        
        /// <remarks/>
        public void ExistsByParamsAsync(byte[] byteStrSql, byte[] byteCmdParms, byte[] token, object userState) {
            if ((this.ExistsByParamsOperationCompleted == null)) {
                this.ExistsByParamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsByParamsOperationCompleted);
            }
            this.InvokeAsync("ExistsByParams", new object[] {
                        byteStrSql,
                        byteCmdParms,
                        token}, this.ExistsByParamsOperationCompleted, userState);
        }
        
        private void OnExistsByParamsOperationCompleted(object arg) {
            if ((this.ExistsByParamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsByParamsCompleted(this, new ExistsByParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/TabExists", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TabExists([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteTableName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("TabExists", new object[] {
                        byteTableName,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TabExistsAsync(byte[] byteTableName, byte[] token) {
            this.TabExistsAsync(byteTableName, token, null);
        }
        
        /// <remarks/>
        public void TabExistsAsync(byte[] byteTableName, byte[] token, object userState) {
            if ((this.TabExistsOperationCompleted == null)) {
                this.TabExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTabExistsOperationCompleted);
            }
            this.InvokeAsync("TabExists", new object[] {
                        byteTableName,
                        token}, this.TabExistsOperationCompleted, userState);
        }
        
        private void OnTabExistsOperationCompleted(object arg) {
            if ((this.TabExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TabExistsCompleted(this, new TabExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ExecuteSql", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExecuteSql([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("ExecuteSql", new object[] {
                        byteStrSql,
                        token});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSqlAsync(byte[] byteStrSql, byte[] token) {
            this.ExecuteSqlAsync(byteStrSql, token, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlAsync(byte[] byteStrSql, byte[] token, object userState) {
            if ((this.ExecuteSqlOperationCompleted == null)) {
                this.ExecuteSqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlOperationCompleted);
            }
            this.InvokeAsync("ExecuteSql", new object[] {
                        byteStrSql,
                        token}, this.ExecuteSqlOperationCompleted, userState);
        }
        
        private void OnExecuteSqlOperationCompleted(object arg) {
            if ((this.ExecuteSqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlCompleted(this, new ExecuteSqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ExcuteSqlByNoTimeOut", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExcuteSqlByNoTimeOut([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("ExcuteSqlByNoTimeOut", new object[] {
                        byteStrSql,
                        token});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteSqlByNoTimeOutAsync(byte[] byteStrSql, byte[] token) {
            this.ExcuteSqlByNoTimeOutAsync(byteStrSql, token, null);
        }
        
        /// <remarks/>
        public void ExcuteSqlByNoTimeOutAsync(byte[] byteStrSql, byte[] token, object userState) {
            if ((this.ExcuteSqlByNoTimeOutOperationCompleted == null)) {
                this.ExcuteSqlByNoTimeOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteSqlByNoTimeOutOperationCompleted);
            }
            this.InvokeAsync("ExcuteSqlByNoTimeOut", new object[] {
                        byteStrSql,
                        token}, this.ExcuteSqlByNoTimeOutOperationCompleted, userState);
        }
        
        private void OnExcuteSqlByNoTimeOutOperationCompleted(object arg) {
            if ((this.ExcuteSqlByNoTimeOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteSqlByNoTimeOutCompleted(this, new ExcuteSqlByNoTimeOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ExecuteSqlByTime", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExecuteSqlByTime([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, int timeout, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("ExecuteSqlByTime", new object[] {
                        byteStrSql,
                        timeout,
                        token});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSqlByTimeAsync(byte[] byteStrSql, int timeout, byte[] token) {
            this.ExecuteSqlByTimeAsync(byteStrSql, timeout, token, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlByTimeAsync(byte[] byteStrSql, int timeout, byte[] token, object userState) {
            if ((this.ExecuteSqlByTimeOperationCompleted == null)) {
                this.ExecuteSqlByTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlByTimeOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlByTime", new object[] {
                        byteStrSql,
                        timeout,
                        token}, this.ExecuteSqlByTimeOperationCompleted, userState);
        }
        
        private void OnExecuteSqlByTimeOperationCompleted(object arg) {
            if ((this.ExecuteSqlByTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlByTimeCompleted(this, new ExecuteSqlByTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ExecuteSqlTran", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExecuteSqlTran([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteListStrSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("ExecuteSqlTran", new object[] {
                        byteListStrSql,
                        token});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSqlTranAsync(byte[] byteListStrSql, byte[] token) {
            this.ExecuteSqlTranAsync(byteListStrSql, token, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlTranAsync(byte[] byteListStrSql, byte[] token, object userState) {
            if ((this.ExecuteSqlTranOperationCompleted == null)) {
                this.ExecuteSqlTranOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlTranOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlTran", new object[] {
                        byteListStrSql,
                        token}, this.ExecuteSqlTranOperationCompleted, userState);
        }
        
        private void OnExecuteSqlTranOperationCompleted(object arg) {
            if ((this.ExecuteSqlTranCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlTranCompleted(this, new ExecuteSqlTranCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ExecuteSqlByContent", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExecuteSqlByContent([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteContent, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("ExecuteSqlByContent", new object[] {
                        byteStrSql,
                        byteContent,
                        token});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSqlByContentAsync(byte[] byteStrSql, byte[] byteContent, byte[] token) {
            this.ExecuteSqlByContentAsync(byteStrSql, byteContent, token, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlByContentAsync(byte[] byteStrSql, byte[] byteContent, byte[] token, object userState) {
            if ((this.ExecuteSqlByContentOperationCompleted == null)) {
                this.ExecuteSqlByContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlByContentOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlByContent", new object[] {
                        byteStrSql,
                        byteContent,
                        token}, this.ExecuteSqlByContentOperationCompleted, userState);
        }
        
        private void OnExecuteSqlByContentOperationCompleted(object arg) {
            if ((this.ExecuteSqlByContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlByContentCompleted(this, new ExecuteSqlByContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ExecuteSqlGetByContent", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ExecuteSqlGetByContent([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteContent, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("ExecuteSqlGetByContent", new object[] {
                        byteStrSql,
                        byteContent,
                        token});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSqlGetByContentAsync(byte[] byteStrSql, byte[] byteContent, byte[] token) {
            this.ExecuteSqlGetByContentAsync(byteStrSql, byteContent, token, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlGetByContentAsync(byte[] byteStrSql, byte[] byteContent, byte[] token, object userState) {
            if ((this.ExecuteSqlGetByContentOperationCompleted == null)) {
                this.ExecuteSqlGetByContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlGetByContentOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlGetByContent", new object[] {
                        byteStrSql,
                        byteContent,
                        token}, this.ExecuteSqlGetByContentOperationCompleted, userState);
        }
        
        private void OnExecuteSqlGetByContentOperationCompleted(object arg) {
            if ((this.ExecuteSqlGetByContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlGetByContentCompleted(this, new ExecuteSqlGetByContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ExecuteSqlInsertImg", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExecuteSqlInsertImg([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteImageBytes, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("ExecuteSqlInsertImg", new object[] {
                        byteStrSql,
                        byteImageBytes,
                        token});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSqlInsertImgAsync(byte[] byteStrSql, byte[] byteImageBytes, byte[] token) {
            this.ExecuteSqlInsertImgAsync(byteStrSql, byteImageBytes, token, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlInsertImgAsync(byte[] byteStrSql, byte[] byteImageBytes, byte[] token, object userState) {
            if ((this.ExecuteSqlInsertImgOperationCompleted == null)) {
                this.ExecuteSqlInsertImgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlInsertImgOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlInsertImg", new object[] {
                        byteStrSql,
                        byteImageBytes,
                        token}, this.ExecuteSqlInsertImgOperationCompleted, userState);
        }
        
        private void OnExecuteSqlInsertImgOperationCompleted(object arg) {
            if ((this.ExecuteSqlInsertImgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlInsertImgCompleted(this, new ExecuteSqlInsertImgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/GetSingle", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSingle([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("GetSingle", new object[] {
                        byteStrSql,
                        token});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleAsync(byte[] byteStrSql, byte[] token) {
            this.GetSingleAsync(byteStrSql, token, null);
        }
        
        /// <remarks/>
        public void GetSingleAsync(byte[] byteStrSql, byte[] token, object userState) {
            if ((this.GetSingleOperationCompleted == null)) {
                this.GetSingleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleOperationCompleted);
            }
            this.InvokeAsync("GetSingle", new object[] {
                        byteStrSql,
                        token}, this.GetSingleOperationCompleted, userState);
        }
        
        private void OnGetSingleOperationCompleted(object arg) {
            if ((this.GetSingleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleCompleted(this, new GetSingleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/GetSingleByTimeOut", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSingleByTimeOut([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, int timeout, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("GetSingleByTimeOut", new object[] {
                        byteStrSql,
                        timeout,
                        token});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleByTimeOutAsync(byte[] byteStrSql, int timeout, byte[] token) {
            this.GetSingleByTimeOutAsync(byteStrSql, timeout, token, null);
        }
        
        /// <remarks/>
        public void GetSingleByTimeOutAsync(byte[] byteStrSql, int timeout, byte[] token, object userState) {
            if ((this.GetSingleByTimeOutOperationCompleted == null)) {
                this.GetSingleByTimeOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleByTimeOutOperationCompleted);
            }
            this.InvokeAsync("GetSingleByTimeOut", new object[] {
                        byteStrSql,
                        timeout,
                        token}, this.GetSingleByTimeOutOperationCompleted, userState);
        }
        
        private void OnGetSingleByTimeOutOperationCompleted(object arg) {
            if ((this.GetSingleByTimeOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleByTimeOutCompleted(this, new GetSingleByTimeOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/Query", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Query([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("Query", new object[] {
                        byteStrSql,
                        token});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryAsync(byte[] byteStrSql, byte[] token) {
            this.QueryAsync(byteStrSql, token, null);
        }
        
        /// <remarks/>
        public void QueryAsync(byte[] byteStrSql, byte[] token, object userState) {
            if ((this.QueryOperationCompleted == null)) {
                this.QueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOperationCompleted);
            }
            this.InvokeAsync("Query", new object[] {
                        byteStrSql,
                        token}, this.QueryOperationCompleted, userState);
        }
        
        private void OnQueryOperationCompleted(object arg) {
            if ((this.QueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCompleted(this, new QueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/QueryByTimeOut", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] QueryByTimeOut([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, int timeout, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("QueryByTimeOut", new object[] {
                        byteStrSql,
                        timeout,
                        token});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryByTimeOutAsync(byte[] byteStrSql, int timeout, byte[] token) {
            this.QueryByTimeOutAsync(byteStrSql, timeout, token, null);
        }
        
        /// <remarks/>
        public void QueryByTimeOutAsync(byte[] byteStrSql, int timeout, byte[] token, object userState) {
            if ((this.QueryByTimeOutOperationCompleted == null)) {
                this.QueryByTimeOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryByTimeOutOperationCompleted);
            }
            this.InvokeAsync("QueryByTimeOut", new object[] {
                        byteStrSql,
                        timeout,
                        token}, this.QueryByTimeOutOperationCompleted, userState);
        }
        
        private void OnQueryByTimeOutOperationCompleted(object arg) {
            if ((this.QueryByTimeOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryByTimeOutCompleted(this, new QueryByTimeOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ExecuteSqlByParams", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExecuteSqlByParams([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteCmdParms, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("ExecuteSqlByParams", new object[] {
                        byteStrSql,
                        byteCmdParms,
                        token});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSqlByParamsAsync(byte[] byteStrSql, byte[] byteCmdParms, byte[] token) {
            this.ExecuteSqlByParamsAsync(byteStrSql, byteCmdParms, token, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlByParamsAsync(byte[] byteStrSql, byte[] byteCmdParms, byte[] token, object userState) {
            if ((this.ExecuteSqlByParamsOperationCompleted == null)) {
                this.ExecuteSqlByParamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlByParamsOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlByParams", new object[] {
                        byteStrSql,
                        byteCmdParms,
                        token}, this.ExecuteSqlByParamsOperationCompleted, userState);
        }
        
        private void OnExecuteSqlByParamsOperationCompleted(object arg) {
            if ((this.ExecuteSqlByParamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlByParamsCompleted(this, new ExecuteSqlByParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ExecuteSqlTranByHashtable", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteSqlTranByHashtable([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteHtSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            this.Invoke("ExecuteSqlTranByHashtable", new object[] {
                        byteHtSql,
                        token});
        }
        
        /// <remarks/>
        public void ExecuteSqlTranByHashtableAsync(byte[] byteHtSql, byte[] token) {
            this.ExecuteSqlTranByHashtableAsync(byteHtSql, token, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlTranByHashtableAsync(byte[] byteHtSql, byte[] token, object userState) {
            if ((this.ExecuteSqlTranByHashtableOperationCompleted == null)) {
                this.ExecuteSqlTranByHashtableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlTranByHashtableOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlTranByHashtable", new object[] {
                        byteHtSql,
                        token}, this.ExecuteSqlTranByHashtableOperationCompleted, userState);
        }
        
        private void OnExecuteSqlTranByHashtableOperationCompleted(object arg) {
            if ((this.ExecuteSqlTranByHashtableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlTranByHashtableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ExecuteSqlTranByCmdList", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExecuteSqlTranByCmdList([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteCmdList, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("ExecuteSqlTranByCmdList", new object[] {
                        byteCmdList,
                        token});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSqlTranByCmdListAsync(byte[] byteCmdList, byte[] token) {
            this.ExecuteSqlTranByCmdListAsync(byteCmdList, token, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlTranByCmdListAsync(byte[] byteCmdList, byte[] token, object userState) {
            if ((this.ExecuteSqlTranByCmdListOperationCompleted == null)) {
                this.ExecuteSqlTranByCmdListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlTranByCmdListOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlTranByCmdList", new object[] {
                        byteCmdList,
                        token}, this.ExecuteSqlTranByCmdListOperationCompleted, userState);
        }
        
        private void OnExecuteSqlTranByCmdListOperationCompleted(object arg) {
            if ((this.ExecuteSqlTranByCmdListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlTranByCmdListCompleted(this, new ExecuteSqlTranByCmdListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ExecuteSqlTranWithIndentity", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteSqlTranWithIndentity([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteCmdList, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            this.Invoke("ExecuteSqlTranWithIndentity", new object[] {
                        byteCmdList,
                        token});
        }
        
        /// <remarks/>
        public void ExecuteSqlTranWithIndentityAsync(byte[] byteCmdList, byte[] token) {
            this.ExecuteSqlTranWithIndentityAsync(byteCmdList, token, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlTranWithIndentityAsync(byte[] byteCmdList, byte[] token, object userState) {
            if ((this.ExecuteSqlTranWithIndentityOperationCompleted == null)) {
                this.ExecuteSqlTranWithIndentityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlTranWithIndentityOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlTranWithIndentity", new object[] {
                        byteCmdList,
                        token}, this.ExecuteSqlTranWithIndentityOperationCompleted, userState);
        }
        
        private void OnExecuteSqlTranWithIndentityOperationCompleted(object arg) {
            if ((this.ExecuteSqlTranWithIndentityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlTranWithIndentityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/ExecuteSqlTranWithIndentityByHashtable", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteSqlTranWithIndentityByHashtable([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteHtSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            this.Invoke("ExecuteSqlTranWithIndentityByHashtable", new object[] {
                        byteHtSql,
                        token});
        }
        
        /// <remarks/>
        public void ExecuteSqlTranWithIndentityByHashtableAsync(byte[] byteHtSql, byte[] token) {
            this.ExecuteSqlTranWithIndentityByHashtableAsync(byteHtSql, token, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlTranWithIndentityByHashtableAsync(byte[] byteHtSql, byte[] token, object userState) {
            if ((this.ExecuteSqlTranWithIndentityByHashtableOperationCompleted == null)) {
                this.ExecuteSqlTranWithIndentityByHashtableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlTranWithIndentityByHashtableOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlTranWithIndentityByHashtable", new object[] {
                        byteHtSql,
                        token}, this.ExecuteSqlTranWithIndentityByHashtableOperationCompleted, userState);
        }
        
        private void OnExecuteSqlTranWithIndentityByHashtableOperationCompleted(object arg) {
            if ((this.ExecuteSqlTranWithIndentityByHashtableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlTranWithIndentityByHashtableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/GetSingleByParams", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSingleByParams([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteCmdParms, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("GetSingleByParams", new object[] {
                        byteStrSql,
                        byteCmdParms,
                        token});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleByParamsAsync(byte[] byteStrSql, byte[] byteCmdParms, byte[] token) {
            this.GetSingleByParamsAsync(byteStrSql, byteCmdParms, token, null);
        }
        
        /// <remarks/>
        public void GetSingleByParamsAsync(byte[] byteStrSql, byte[] byteCmdParms, byte[] token, object userState) {
            if ((this.GetSingleByParamsOperationCompleted == null)) {
                this.GetSingleByParamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleByParamsOperationCompleted);
            }
            this.InvokeAsync("GetSingleByParams", new object[] {
                        byteStrSql,
                        byteCmdParms,
                        token}, this.GetSingleByParamsOperationCompleted, userState);
        }
        
        private void OnGetSingleByParamsOperationCompleted(object arg) {
            if ((this.GetSingleByParamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleByParamsCompleted(this, new GetSingleByParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/QueryByParams", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] QueryByParams([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStrSql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteCmdParms, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token) {
            object[] results = this.Invoke("QueryByParams", new object[] {
                        byteStrSql,
                        byteCmdParms,
                        token});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryByParamsAsync(byte[] byteStrSql, byte[] byteCmdParms, byte[] token) {
            this.QueryByParamsAsync(byteStrSql, byteCmdParms, token, null);
        }
        
        /// <remarks/>
        public void QueryByParamsAsync(byte[] byteStrSql, byte[] byteCmdParms, byte[] token, object userState) {
            if ((this.QueryByParamsOperationCompleted == null)) {
                this.QueryByParamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryByParamsOperationCompleted);
            }
            this.InvokeAsync("QueryByParams", new object[] {
                        byteStrSql,
                        byteCmdParms,
                        token}, this.QueryByParamsOperationCompleted, userState);
        }
        
        private void OnQueryByParamsOperationCompleted(object arg) {
            if ((this.QueryByParamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryByParamsCompleted(this, new QueryByParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/RunProcedureByDicParams", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] RunProcedureByDicParams([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStoredProcName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] ref byte[] byteParameters) {
            object[] results = this.Invoke("RunProcedureByDicParams", new object[] {
                        byteStoredProcName,
                        token,
                        byteParameters});
            byteParameters = ((byte[])(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void RunProcedureByDicParamsAsync(byte[] byteStoredProcName, byte[] token, byte[] byteParameters) {
            this.RunProcedureByDicParamsAsync(byteStoredProcName, token, byteParameters, null);
        }
        
        /// <remarks/>
        public void RunProcedureByDicParamsAsync(byte[] byteStoredProcName, byte[] token, byte[] byteParameters, object userState) {
            if ((this.RunProcedureByDicParamsOperationCompleted == null)) {
                this.RunProcedureByDicParamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunProcedureByDicParamsOperationCompleted);
            }
            this.InvokeAsync("RunProcedureByDicParams", new object[] {
                        byteStoredProcName,
                        token,
                        byteParameters}, this.RunProcedureByDicParamsOperationCompleted, userState);
        }
        
        private void OnRunProcedureByDicParamsOperationCompleted(object arg) {
            if ((this.RunProcedureByDicParamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunProcedureByDicParamsCompleted(this, new RunProcedureByDicParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/RunProcedure", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] RunProcedure([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStoredProcName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteTableName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] ref byte[] byteParameters) {
            object[] results = this.Invoke("RunProcedure", new object[] {
                        byteStoredProcName,
                        byteTableName,
                        token,
                        byteParameters});
            byteParameters = ((byte[])(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void RunProcedureAsync(byte[] byteStoredProcName, byte[] byteTableName, byte[] token, byte[] byteParameters) {
            this.RunProcedureAsync(byteStoredProcName, byteTableName, token, byteParameters, null);
        }
        
        /// <remarks/>
        public void RunProcedureAsync(byte[] byteStoredProcName, byte[] byteTableName, byte[] token, byte[] byteParameters, object userState) {
            if ((this.RunProcedureOperationCompleted == null)) {
                this.RunProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunProcedureOperationCompleted);
            }
            this.InvokeAsync("RunProcedure", new object[] {
                        byteStoredProcName,
                        byteTableName,
                        token,
                        byteParameters}, this.RunProcedureOperationCompleted, userState);
        }
        
        private void OnRunProcedureOperationCompleted(object arg) {
            if ((this.RunProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunProcedureCompleted(this, new RunProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/RunProcedureByTimeOut", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] RunProcedureByTimeOut([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStoredProcName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteTableName, int timeout, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] ref byte[] byteParameters) {
            object[] results = this.Invoke("RunProcedureByTimeOut", new object[] {
                        byteStoredProcName,
                        byteTableName,
                        timeout,
                        token,
                        byteParameters});
            byteParameters = ((byte[])(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void RunProcedureByTimeOutAsync(byte[] byteStoredProcName, byte[] byteTableName, int timeout, byte[] token, byte[] byteParameters) {
            this.RunProcedureByTimeOutAsync(byteStoredProcName, byteTableName, timeout, token, byteParameters, null);
        }
        
        /// <remarks/>
        public void RunProcedureByTimeOutAsync(byte[] byteStoredProcName, byte[] byteTableName, int timeout, byte[] token, byte[] byteParameters, object userState) {
            if ((this.RunProcedureByTimeOutOperationCompleted == null)) {
                this.RunProcedureByTimeOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunProcedureByTimeOutOperationCompleted);
            }
            this.InvokeAsync("RunProcedureByTimeOut", new object[] {
                        byteStoredProcName,
                        byteTableName,
                        timeout,
                        token,
                        byteParameters}, this.RunProcedureByTimeOutOperationCompleted, userState);
        }
        
        private void OnRunProcedureByTimeOutOperationCompleted(object arg) {
            if ((this.RunProcedureByTimeOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunProcedureByTimeOutCompleted(this, new RunProcedureByTimeOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/RunProcedureDataSet", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] RunProcedureDataSet([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStoredProcName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] ref byte[] byteParameters) {
            object[] results = this.Invoke("RunProcedureDataSet", new object[] {
                        byteStoredProcName,
                        token,
                        byteParameters});
            byteParameters = ((byte[])(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void RunProcedureDataSetAsync(byte[] byteStoredProcName, byte[] token, byte[] byteParameters) {
            this.RunProcedureDataSetAsync(byteStoredProcName, token, byteParameters, null);
        }
        
        /// <remarks/>
        public void RunProcedureDataSetAsync(byte[] byteStoredProcName, byte[] token, byte[] byteParameters, object userState) {
            if ((this.RunProcedureDataSetOperationCompleted == null)) {
                this.RunProcedureDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunProcedureDataSetOperationCompleted);
            }
            this.InvokeAsync("RunProcedureDataSet", new object[] {
                        byteStoredProcName,
                        token,
                        byteParameters}, this.RunProcedureDataSetOperationCompleted, userState);
        }
        
        private void OnRunProcedureDataSetOperationCompleted(object arg) {
            if ((this.RunProcedureDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunProcedureDataSetCompleted(this, new RunProcedureDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/RunProcedureRetRowsAffected", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RunProcedureRetRowsAffected([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStoredProcName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] ref byte[] byteParameters, out int rowsAffected) {
            object[] results = this.Invoke("RunProcedureRetRowsAffected", new object[] {
                        byteStoredProcName,
                        token,
                        byteParameters});
            byteParameters = ((byte[])(results[1]));
            rowsAffected = ((int)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RunProcedureRetRowsAffectedAsync(byte[] byteStoredProcName, byte[] token, byte[] byteParameters) {
            this.RunProcedureRetRowsAffectedAsync(byteStoredProcName, token, byteParameters, null);
        }
        
        /// <remarks/>
        public void RunProcedureRetRowsAffectedAsync(byte[] byteStoredProcName, byte[] token, byte[] byteParameters, object userState) {
            if ((this.RunProcedureRetRowsAffectedOperationCompleted == null)) {
                this.RunProcedureRetRowsAffectedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunProcedureRetRowsAffectedOperationCompleted);
            }
            this.InvokeAsync("RunProcedureRetRowsAffected", new object[] {
                        byteStoredProcName,
                        token,
                        byteParameters}, this.RunProcedureRetRowsAffectedOperationCompleted, userState);
        }
        
        private void OnRunProcedureRetRowsAffectedOperationCompleted(object arg) {
            if ((this.RunProcedureRetRowsAffectedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunProcedureRetRowsAffectedCompleted(this, new RunProcedureRetRowsAffectedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/RunProcedureByDicParams_", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RunProcedureByDicParams_([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStoredProcName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] ref byte[] byteParameters) {
            object[] results = this.Invoke("RunProcedureByDicParams_", new object[] {
                        byteStoredProcName,
                        token,
                        byteParameters});
            byteParameters = ((byte[])(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RunProcedureByDicParams_Async(byte[] byteStoredProcName, byte[] token, byte[] byteParameters) {
            this.RunProcedureByDicParams_Async(byteStoredProcName, token, byteParameters, null);
        }
        
        /// <remarks/>
        public void RunProcedureByDicParams_Async(byte[] byteStoredProcName, byte[] token, byte[] byteParameters, object userState) {
            if ((this.RunProcedureByDicParams_OperationCompleted == null)) {
                this.RunProcedureByDicParams_OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunProcedureByDicParams_OperationCompleted);
            }
            this.InvokeAsync("RunProcedureByDicParams_", new object[] {
                        byteStoredProcName,
                        token,
                        byteParameters}, this.RunProcedureByDicParams_OperationCompleted, userState);
        }
        
        private void OnRunProcedureByDicParams_OperationCompleted(object arg) {
            if ((this.RunProcedureByDicParams_Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunProcedureByDicParams_Completed(this, new RunProcedureByDicParams_CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/RunProcedure_", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RunProcedure_([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteStoredProcName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] token, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] ref byte[] byteParameters) {
            object[] results = this.Invoke("RunProcedure_", new object[] {
                        byteStoredProcName,
                        token,
                        byteParameters});
            byteParameters = ((byte[])(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RunProcedure_Async(byte[] byteStoredProcName, byte[] token, byte[] byteParameters) {
            this.RunProcedure_Async(byteStoredProcName, token, byteParameters, null);
        }
        
        /// <remarks/>
        public void RunProcedure_Async(byte[] byteStoredProcName, byte[] token, byte[] byteParameters, object userState) {
            if ((this.RunProcedure_OperationCompleted == null)) {
                this.RunProcedure_OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunProcedure_OperationCompleted);
            }
            this.InvokeAsync("RunProcedure_", new object[] {
                        byteStoredProcName,
                        token,
                        byteParameters}, this.RunProcedure_OperationCompleted, userState);
        }
        
        private void OnRunProcedure_OperationCompleted(object arg) {
            if ((this.RunProcedure_Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunProcedure_Completed(this, new RunProcedure_CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/CreateDirectory", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateDirectory(string directory) {
            object[] results = this.Invoke("CreateDirectory", new object[] {
                        directory});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDirectoryAsync(string directory) {
            this.CreateDirectoryAsync(directory, null);
        }
        
        /// <remarks/>
        public void CreateDirectoryAsync(string directory, object userState) {
            if ((this.CreateDirectoryOperationCompleted == null)) {
                this.CreateDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDirectoryOperationCompleted);
            }
            this.InvokeAsync("CreateDirectory", new object[] {
                        directory}, this.CreateDirectoryOperationCompleted, userState);
        }
        
        private void OnCreateDirectoryOperationCompleted(object arg) {
            if ((this.CreateDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDirectoryCompleted(this, new CreateDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/CreateUploadInstance", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CreateUploadInstance(string path, string fileName) {
            object[] results = this.Invoke("CreateUploadInstance", new object[] {
                        path,
                        fileName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void CreateUploadInstanceAsync(string path, string fileName) {
            this.CreateUploadInstanceAsync(path, fileName, null);
        }
        
        /// <remarks/>
        public void CreateUploadInstanceAsync(string path, string fileName, object userState) {
            if ((this.CreateUploadInstanceOperationCompleted == null)) {
                this.CreateUploadInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUploadInstanceOperationCompleted);
            }
            this.InvokeAsync("CreateUploadInstance", new object[] {
                        path,
                        fileName}, this.CreateUploadInstanceOperationCompleted, userState);
        }
        
        private void OnCreateUploadInstanceOperationCompleted(object arg) {
            if ((this.CreateUploadInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUploadInstanceCompleted(this, new CreateUploadInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/UploadFileData", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadFileData([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteInstance, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, long offset, int dataLength) {
            object[] results = this.Invoke("UploadFileData", new object[] {
                        byteInstance,
                        data,
                        offset,
                        dataLength});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileDataAsync(byte[] byteInstance, byte[] data, long offset, int dataLength) {
            this.UploadFileDataAsync(byteInstance, data, offset, dataLength, null);
        }
        
        /// <remarks/>
        public void UploadFileDataAsync(byte[] byteInstance, byte[] data, long offset, int dataLength, object userState) {
            if ((this.UploadFileDataOperationCompleted == null)) {
                this.UploadFileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileDataOperationCompleted);
            }
            this.InvokeAsync("UploadFileData", new object[] {
                        byteInstance,
                        data,
                        offset,
                        dataLength}, this.UploadFileDataOperationCompleted, userState);
        }
        
        private void OnUploadFileDataOperationCompleted(object arg) {
            if ((this.UploadFileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileDataCompleted(this, new UploadFileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/AbortUpload", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AbortUpload([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteInstance) {
            this.Invoke("AbortUpload", new object[] {
                        byteInstance});
        }
        
        /// <remarks/>
        public void AbortUploadAsync(byte[] byteInstance) {
            this.AbortUploadAsync(byteInstance, null);
        }
        
        /// <remarks/>
        public void AbortUploadAsync(byte[] byteInstance, object userState) {
            if ((this.AbortUploadOperationCompleted == null)) {
                this.AbortUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAbortUploadOperationCompleted);
            }
            this.InvokeAsync("AbortUpload", new object[] {
                        byteInstance}, this.AbortUploadOperationCompleted, userState);
        }
        
        private void OnAbortUploadOperationCompleted(object arg) {
            if ((this.AbortUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AbortUploadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/FileExists", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FileExists(string path) {
            object[] results = this.Invoke("FileExists", new object[] {
                        path});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FileExistsAsync(string path) {
            this.FileExistsAsync(path, null);
        }
        
        /// <remarks/>
        public void FileExistsAsync(string path, object userState) {
            if ((this.FileExistsOperationCompleted == null)) {
                this.FileExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileExistsOperationCompleted);
            }
            this.InvokeAsync("FileExists", new object[] {
                        path}, this.FileExistsOperationCompleted, userState);
        }
        
        private void OnFileExistsOperationCompleted(object arg) {
            if ((this.FileExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileExistsCompleted(this, new FileExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/GetFileLength", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetFileLength(string path) {
            object[] results = this.Invoke("GetFileLength", new object[] {
                        path});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileLengthAsync(string path) {
            this.GetFileLengthAsync(path, null);
        }
        
        /// <remarks/>
        public void GetFileLengthAsync(string path, object userState) {
            if ((this.GetFileLengthOperationCompleted == null)) {
                this.GetFileLengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileLengthOperationCompleted);
            }
            this.InvokeAsync("GetFileLength", new object[] {
                        path}, this.GetFileLengthOperationCompleted, userState);
        }
        
        private void OnGetFileLengthOperationCompleted(object arg) {
            if ((this.GetFileLengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileLengthCompleted(this, new GetFileLengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/DownloadFileData", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DownloadFileData(string path, long offset, int dataLength, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] out byte[] data) {
            object[] results = this.Invoke("DownloadFileData", new object[] {
                        path,
                        offset,
                        dataLength});
            data = ((byte[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadFileDataAsync(string path, long offset, int dataLength) {
            this.DownloadFileDataAsync(path, offset, dataLength, null);
        }
        
        /// <remarks/>
        public void DownloadFileDataAsync(string path, long offset, int dataLength, object userState) {
            if ((this.DownloadFileDataOperationCompleted == null)) {
                this.DownloadFileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFileDataOperationCompleted);
            }
            this.InvokeAsync("DownloadFileData", new object[] {
                        path,
                        offset,
                        dataLength}, this.DownloadFileDataOperationCompleted, userState);
        }
        
        private void OnDownloadFileDataOperationCompleted(object arg) {
            if ((this.DownloadFileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFileDataCompleted(this, new DownloadFileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/GenerateThumbnail", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GenerateThumbnail(string filePath, string fileName, int width, int height) {
            object[] results = this.Invoke("GenerateThumbnail", new object[] {
                        filePath,
                        fileName,
                        width,
                        height});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateThumbnailAsync(string filePath, string fileName, int width, int height) {
            this.GenerateThumbnailAsync(filePath, fileName, width, height, null);
        }
        
        /// <remarks/>
        public void GenerateThumbnailAsync(string filePath, string fileName, int width, int height, object userState) {
            if ((this.GenerateThumbnailOperationCompleted == null)) {
                this.GenerateThumbnailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateThumbnailOperationCompleted);
            }
            this.InvokeAsync("GenerateThumbnail", new object[] {
                        filePath,
                        fileName,
                        width,
                        height}, this.GenerateThumbnailOperationCompleted, userState);
        }
        
        private void OnGenerateThumbnailOperationCompleted(object arg) {
            if ((this.GenerateThumbnailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateThumbnailCompleted(this, new GenerateThumbnailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/CreateThumbnails", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateThumbnails(string filePath, string fileName) {
            object[] results = this.Invoke("CreateThumbnails", new object[] {
                        filePath,
                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateThumbnailsAsync(string filePath, string fileName) {
            this.CreateThumbnailsAsync(filePath, fileName, null);
        }
        
        /// <remarks/>
        public void CreateThumbnailsAsync(string filePath, string fileName, object userState) {
            if ((this.CreateThumbnailsOperationCompleted == null)) {
                this.CreateThumbnailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateThumbnailsOperationCompleted);
            }
            this.InvokeAsync("CreateThumbnails", new object[] {
                        filePath,
                        fileName}, this.CreateThumbnailsOperationCompleted, userState);
        }
        
        private void OnCreateThumbnailsOperationCompleted(object arg) {
            if ((this.CreateThumbnailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateThumbnailsCompleted(this, new CreateThumbnailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qf.nolyoh.com/GetWechatUserInfo", RequestNamespace="http://qf.nolyoh.com/", ResponseNamespace="http://qf.nolyoh.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWechatUserInfo(string WechatOpenID) {
            object[] results = this.Invoke("GetWechatUserInfo", new object[] {
                        WechatOpenID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWechatUserInfoAsync(string WechatOpenID) {
            this.GetWechatUserInfoAsync(WechatOpenID, null);
        }
        
        /// <remarks/>
        public void GetWechatUserInfoAsync(string WechatOpenID, object userState) {
            if ((this.GetWechatUserInfoOperationCompleted == null)) {
                this.GetWechatUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWechatUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetWechatUserInfo", new object[] {
                        WechatOpenID}, this.GetWechatUserInfoOperationCompleted, userState);
        }
        
        private void OnGetWechatUserInfoOperationCompleted(object arg) {
            if ((this.GetWechatUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWechatUserInfoCompleted(this, new GetWechatUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTokenCompletedEventHandler(object sender, GetTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void QueryTokenCompletedEventHandler(object sender, QueryTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateClientInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetClientInfoByUserIDCompletedEventHandler(object sender, GetClientInfoByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientInfoByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientInfoByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CloseTokenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetServerDateTimeCompletedEventHandler(object sender, GetServerDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ColumnExistsCompletedEventHandler(object sender, ColumnExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ColumnExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ColumnExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMaxIDCompletedEventHandler(object sender, GetMaxIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExistsCompletedEventHandler(object sender, ExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExistsByParamsCompletedEventHandler(object sender, ExistsByParamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsByParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistsByParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void TabExistsCompletedEventHandler(object sender, TabExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TabExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TabExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExecuteSqlCompletedEventHandler(object sender, ExecuteSqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExcuteSqlByNoTimeOutCompletedEventHandler(object sender, ExcuteSqlByNoTimeOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteSqlByNoTimeOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteSqlByNoTimeOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExecuteSqlByTimeCompletedEventHandler(object sender, ExecuteSqlByTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSqlByTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSqlByTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExecuteSqlTranCompletedEventHandler(object sender, ExecuteSqlTranCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSqlTranCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSqlTranCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExecuteSqlByContentCompletedEventHandler(object sender, ExecuteSqlByContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSqlByContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSqlByContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExecuteSqlGetByContentCompletedEventHandler(object sender, ExecuteSqlGetByContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSqlGetByContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSqlGetByContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExecuteSqlInsertImgCompletedEventHandler(object sender, ExecuteSqlInsertImgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSqlInsertImgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSqlInsertImgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSingleCompletedEventHandler(object sender, GetSingleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSingleByTimeOutCompletedEventHandler(object sender, GetSingleByTimeOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleByTimeOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleByTimeOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void QueryCompletedEventHandler(object sender, QueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void QueryByTimeOutCompletedEventHandler(object sender, QueryByTimeOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryByTimeOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryByTimeOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExecuteSqlByParamsCompletedEventHandler(object sender, ExecuteSqlByParamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSqlByParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSqlByParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExecuteSqlTranByHashtableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExecuteSqlTranByCmdListCompletedEventHandler(object sender, ExecuteSqlTranByCmdListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSqlTranByCmdListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSqlTranByCmdListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExecuteSqlTranWithIndentityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExecuteSqlTranWithIndentityByHashtableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSingleByParamsCompletedEventHandler(object sender, GetSingleByParamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleByParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleByParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void QueryByParamsCompletedEventHandler(object sender, QueryByParamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryByParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryByParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RunProcedureByDicParamsCompletedEventHandler(object sender, RunProcedureByDicParamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunProcedureByDicParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunProcedureByDicParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] byteParameters {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RunProcedureCompletedEventHandler(object sender, RunProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] byteParameters {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RunProcedureByTimeOutCompletedEventHandler(object sender, RunProcedureByTimeOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunProcedureByTimeOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunProcedureByTimeOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] byteParameters {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RunProcedureDataSetCompletedEventHandler(object sender, RunProcedureDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunProcedureDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunProcedureDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] byteParameters {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RunProcedureRetRowsAffectedCompletedEventHandler(object sender, RunProcedureRetRowsAffectedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunProcedureRetRowsAffectedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunProcedureRetRowsAffectedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] byteParameters {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int rowsAffected {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RunProcedureByDicParams_CompletedEventHandler(object sender, RunProcedureByDicParams_CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunProcedureByDicParams_CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunProcedureByDicParams_CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] byteParameters {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RunProcedure_CompletedEventHandler(object sender, RunProcedure_CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunProcedure_CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunProcedure_CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] byteParameters {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateDirectoryCompletedEventHandler(object sender, CreateDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateUploadInstanceCompletedEventHandler(object sender, CreateUploadInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUploadInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUploadInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UploadFileDataCompletedEventHandler(object sender, UploadFileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AbortUploadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FileExistsCompletedEventHandler(object sender, FileExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFileLengthCompletedEventHandler(object sender, GetFileLengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileLengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileLengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DownloadFileDataCompletedEventHandler(object sender, DownloadFileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadFileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadFileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] data {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GenerateThumbnailCompletedEventHandler(object sender, GenerateThumbnailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateThumbnailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateThumbnailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateThumbnailsCompletedEventHandler(object sender, CreateThumbnailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateThumbnailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateThumbnailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetWechatUserInfoCompletedEventHandler(object sender, GetWechatUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWechatUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWechatUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591